apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        /*
        Set buildConfigField for all buildTypes, ie, freeDebug, paidDebug, freeRelease,
        paidRelease etc.
         */
        buildTypes.each {
            /*
            10.0.2.2 is localhost's IP address in Android emulator. In order to test this
            on a real Android device, start the app engine module from Android Studio/terminal.
            Replace 10.0.2.2 in the line below with the IP address of your network. Ensure
            device running Android studio and your android device are connected to the same
            network.
             */
            it.buildConfigField("String", "GCE_ROOT_URL", "\"http://10.0.2.2:8080/_ah/api/\"")
        }
    }

    productFlavors {
        free {
            applicationIdSuffix ".free"
        }

        paid {
            applicationIdSuffix ".paid"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.google.code.findbugs:jsr305:2.0.1'

    compile project(path: ':jokebackend', configuration: 'android-endpoints')
    compile project(':jokeview')

    freeCompile 'com.google.android.gms:play-services-ads:10.2.0'
}

/*
This tasks automates the running of android tests. The only
prerequisite is that the Android emulator must be running.
 */
task runAndroidTests {
    dependsOn =  [ "runAppEngine", ":app:connectedAndroidTest" ]

    mustRunAfter "runAppEngine"
    finalizedBy "stopAppEngine"

    doLast {
        println "Android tests executed"
    }
}

task runAppEngine {
    dependsOn = [ ":jokebackend:appengineStop", ":jokebackend:appengineRun" ]

    /*
    Cannot use stopAppEngine here since it causes a circular dependency
    leading to build failing with an exception. Hence use appengineStop
    task in module jokebackend.
     */
    mustRunAfter ":jokebackend:appengineStop"

    /*
    evaluationDependsOn is required since it's absence leads to gradle throwing
    an error that reads - Could not find method appengine() on project:':jokebackend'
     */
    evaluationDependsOn ":jokebackend"
    project(":jokebackend") {
        appengine {
            daemon true
        }
    }

    doLast {
        println "App engine successfully started"
    }
}

task stopAppEngine {
    dependsOn ":jokebackend:appengineStop"

    doLast {
        println "App engine successfully stopped"
    }
}